<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zok1hOK7pDhFKpLQilHEogS1yC0ubtGLFAkIADs=
</value>
  </data>
  <data name="label4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zok1hOK7pDhFKpLQilHEogS1yC0ubtGLFAkIADs=
</value>
  </data>
</root>